#include <iostream>
#include <vector>
#include <list>

int main()
{
	int x[10] = { 1,2,3,4,5,6,7,8,9,10 };

	// 배열은 연속된 메모리 이므로
	// 배열의 시작 주소를 알면 모든 요소를 열거(++ 사용)할수 있습니다
	int* p1 = x;
	++p1;

	std::list<int> s = { 1,2,3,4,5,6,7,8,9,10 };

	// std::list 는 연속된 메모리가 아니므로 1번째 요소의 시작주소를 알아도
	// ++로 다음으로 이동할수 없습니다.	

	// 하지만, 반복자(iterator) 를 꺼내면 ++로 다음으로 이동 가능합니다.
	auto p2 = s.begin();

	// 반복자 p2는 포인터는 아니지만, 포인터와 사용법이 동일합니다.
	std::cout << *p2 << std::endl; // 1

	++p2;  // p2.operator++() 라는 함수가 호출되는것
	std::cout << *p2 << std::endl; // 2
}
// 반드시 기억 할것
// 반복자(iterator) : 요소를 가리키는 포인터 라고 기억하세요
//					(진짜 포인터는 아니지만, 포인터와 완전이 동일한 사용법)
